[
  {
    "sys": {
      "id": "53PLFh5VLIotcvMqR6VsnO"
    },
    "date": "2021-02-03T00:00:00.000Z",
    "title": "The power of the Contentful Rich Text field",
    "slug": "the-power-of-the-contentful-rich-text-field",
    "excerpt": "Explore how this starter blog renders image assets, video embeds, and code blocks in the body of the posts.",
    "tags": ["rich text", "contentful"],
    "externalUrl": null,
    "body": {
      "json": {
        "data": {},
        "content": [
          {
            "data": {},
            "content": [
              {
                "data": {},
                "marks": [],
                "value": "Rich Text is a field type in Contentful that enables authors to create rich text content, similar to traditional \"What you see is what you get\" (wysiwyg) editors. Additionally, it allows entries and assets within your Contentful space to be linked dynamically and embedded within the flow of the text.",
                "nodeType": "text"
              }
            ],
            "nodeType": "paragraph"
          },
          {
            "data": {},
            "content": [
              {
                "data": {},
                "marks": [],
                "value": "Here is a video entry embedded as an entry in the Rich Text field editor.",
                "nodeType": "text"
              }
            ],
            "nodeType": "paragraph"
          },
          {
            "data": {
              "target": {
                "sys": {
                  "id": "5228EMw7XpxmDen9zgHyci",
                  "type": "Link",
                  "linkType": "Entry"
                }
              }
            },
            "content": [],
            "nodeType": "embedded-entry-block"
          },
          {
            "data": {},
            "content": [
              {
                "data": {},
                "marks": [],
                "value": "Here is an image asset.",
                "nodeType": "text"
              }
            ],
            "nodeType": "paragraph"
          },
          {
            "data": {
              "target": {
                "sys": {
                  "id": "48tx2UTZfGBRiJZTo9z1kV",
                  "type": "Link",
                  "linkType": "Asset"
                }
              }
            },
            "content": [],
            "nodeType": "embedded-asset-block"
          },
          {
            "data": {},
            "content": [
              {
                "data": {},
                "marks": [],
                "value": "And here is a code block entry.",
                "nodeType": "text"
              }
            ],
            "nodeType": "paragraph"
          },
          {
            "data": {
              "target": {
                "sys": {
                  "id": "59hJ3cbzJD6u4rN5zTVcxs",
                  "type": "Link",
                  "linkType": "Entry"
                }
              }
            },
            "content": [],
            "nodeType": "embedded-entry-block"
          },
          {
            "data": {},
            "content": [
              {
                "data": {},
                "marks": [],
                "value": "A look at the code",
                "nodeType": "text"
              }
            ],
            "nodeType": "heading-2"
          },
          {
            "data": {},
            "content": [
              {
                "data": {},
                "marks": [],
                "value": "The Rich Text field is rendered via the ",
                "nodeType": "text"
              },
              {
                "data": {
                  "uri": "https://github.com/whitep4nth3r/nextjs-contentful-blog-starter/blob/main/components/RichTextPageContent/index.js"
                },
                "content": [
                  {
                    "data": {},
                    "marks": [],
                    "value": "RichTextPageContent component",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "hyperlink"
              },
              {
                "data": {},
                "marks": [],
                "value": ", which uses the Contentful package ",
                "nodeType": "text"
              },
              {
                "data": {
                  "uri": "https://www.npmjs.com/package/@contentful/rich-text-react-renderer"
                },
                "content": [
                  {
                    "data": {},
                    "marks": [],
                    "value": "@contentful/rich-text-react-renderer.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "hyperlink"
              },
              {
                "data": {},
                "marks": [],
                "value": " ",
                "nodeType": "text"
              }
            ],
            "nodeType": "paragraph"
          },
          {
            "data": {},
            "content": [
              {
                "data": {},
                "marks": [],
                "value": "A common solution to rendering the embedded assets and entries inline with the Rich Text response in JavaScript is to create a map of the assets (",
                "nodeType": "text"
              },
              {
                "data": {},
                "marks": [
                  {
                    "type": "code"
                  }
                ],
                "value": "id: asset",
                "nodeType": "text"
              },
              {
                "data": {},
                "marks": [],
                "value": "), and find the asset to display in the map when rendering an asset block.",
                "nodeType": "text"
              }
            ],
            "nodeType": "paragraph"
          },
          {
            "data": {
              "target": {
                "sys": {
                  "id": "1R2Kh2xE4XOibvX8kJsbgX",
                  "type": "Link",
                  "linkType": "Entry"
                }
              }
            },
            "content": [],
            "nodeType": "embedded-entry-block"
          },
          {
            "data": {},
            "content": [
              {
                "data": {},
                "marks": [],
                "value": "",
                "nodeType": "text"
              },
              {
                "data": {
                  "uri": "https://www.contentful.com/developers/docs/concepts/rich-text/"
                },
                "content": [
                  {
                    "data": {},
                    "marks": [],
                    "value": "Take a look at the full Contentful Rich Text documentation from Contentful here.",
                    "nodeType": "text"
                  }
                ],
                "nodeType": "hyperlink"
              },
              {
                "data": {},
                "marks": [],
                "value": "",
                "nodeType": "text"
              }
            ],
            "nodeType": "paragraph"
          },
          {
            "data": {},
            "content": [
              {
                "data": {},
                "marks": [],
                "value": "",
                "nodeType": "text"
              }
            ],
            "nodeType": "paragraph"
          }
        ],
        "nodeType": "document"
      },
      "links": {
        "entries": {
          "block": [
            {
              "sys": {
                "id": "5228EMw7XpxmDen9zgHyci"
              },
              "__typename": "VideoEmbed"
            },
            {
              "sys": {
                "id": "59hJ3cbzJD6u4rN5zTVcxs"
              },
              "__typename": "CodeBlock",
              "description": "Example code block",
              "language": "javascript",
              "code": "/*\n * Format a blog post published date for a human to read.\n * Output is e.g. 16 Feb 2020\n */\n\nexport function formatPublishedDateForDisplay(dateString) {\n  const timestamp = Date.parse(dateString);\n  const date = new Date(timestamp);\n  return `${date.getDate()} ${getMonthStringFromInt(\n    date.getMonth(),\n  )} ${date.getFullYear()}`;\n}"
            },
            {
              "sys": {
                "id": "1R2Kh2xE4XOibvX8kJsbgX"
              },
              "__typename": "CodeBlock",
              "description": "Rich text embedded entries and assets example",
              "language": "javascript",
              "code": "import { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS } from \"@contentful/rich-text-types\";\n\n// Create a bespoke getRenderOptions function\n\nfunction getRenderOptions(links) {\n\n  // create an asset block map\n\n  const assetBlockMap = new Map();\n\n  // loop through the assets and add them to the map\n\n  for (const asset of links.assets.block) {\n    assetBlockMap.set(asset.sys.id, asset);\n  }\n\n  // create an entry block map\n\n  const entryBlockMap = new Map();\n\n  // loop through the entries and add them to the map\n\n  for (const entry of links.entries.block) {\n    entryBlockMap.set(asset.sys.id, entry);\n  }\n\n  return {\n    renderNode: {\n\n      // ... other options ...\n\n      [BLOCKS.EMBEDDED_ENTRY]: (node, children) => {\n\n        // Find your entry in the map\n\n        const entry = entryBlockMap.get(\n          node.data.target.sys.id,\n        );\n\n        switch (entry.__typename) {\n          case \"VideoEmbed\":\n            const { embedUrl, title } = entry;\n\n            // Here we render our video embed component(s)\n\n            return <DynamicVideoEmbed embedUrl={embedUrl} title={title} />;\n\n          case \"CodeBlock\":\n            const { language, code } = entry;\n\n             // Here we render our code block components(s)\n\n            return <DynamicCodeBlock language={language} code={code} />;\n          default:\n            return null;\n        }\n      },\n      [BLOCKS.EMBEDDED_ASSET]: (node, next) => {\n\n        // Find your asset in the map\n\n        const asset = assetBlockMap.get(\n          node.data.target.sys.id,\n        );\n\n        return (\n\n          // Your component/HTML with the data from the asset\n\n        );\n      },\n    }\n  }\n\n// Render your Rich Text content in the DOM\n\nexport default function MyComponent({ richTextResponse }) {\n  return (\n    <>\n      {documentToReactComponents(richTextResponse.json, getRenderOptions(richTextResponse.links));}\n    </>\n  )\n}"
            }
          ]
        },
        "assets": {
          "block": [
            {
              "sys": {
                "id": "48tx2UTZfGBRiJZTo9z1kV"
              },
              "url": "https://images.ctfassets.net/84zl5qdw0ore/48tx2UTZfGBRiJZTo9z1kV/166c8a82c58b5dd48ac5626e03da4395/jeremy-thomas-E0AHdsENmDg-unsplash.jpg",
              "title": "jeremy-thomas-colourful-galaxy-unsplash",
              "width": 5005,
              "height": 3417,
              "description": "Blue and purple galaxy digital wallpaper"
            }
          ]
        }
      }
    }
  }
]
